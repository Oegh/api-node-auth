openapi: 3.0.0
info:
  title: JWT Authentication with Refresh Tokens API Docs
  version: 1.0.0

servers:
  - url: http://localhost:4001
    description: Local development server

  - url: https://localhost:4001
    description: Production server

paths:
  /authenticate:
    get:
      summary: Authenticate user credentials and with ApiCujae and return a JWT token and a refresh token
      operationId: authenticate
      tags:
        - User Authentication
      security:
        - basicAuth: []
      responses:
        "200":
          description: A JWT access token and a refresh token
          content:
            application/json:
              schema:
                type: object
                properties:
                  refreshToken:
                    type: string
                    example: "eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6ImFjbHJleWVzIiwiaWF0IjoxNjM1NzQ4NTcwLCJleHAiOjE2MzU3NTIxNzAsImF1ZCI6InBhbmRvcmEiLCJpc3MiOiJOb2RlIEF1dGggQXBpIiwic3ViIjoiYWNscmV5ZXMifQ.LhxJfN58kYBu42ZNs3ItyiXxGD381OQJ41L4U10WgarTorVntZ6wPXlWqF7otUYIeqmjWd6ex38zbqxwEABmB_9-o7SVEayVh9sni0Z0s1srZa_1Sh7EuFXu6QzMrwsirb7vqjOcTvKs7TxKZUS6EaqKTG9f6GAFxvihNluN_5I"
                  accessToken:
                    type: string
                    example: "eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6ImFjbHJleWVzIiwiaWF0IjoxNjM1NzQ4NTcwLCJleHAiOjE2MzU3NTIxNzAsImF1ZCI6InBhbmRvcmEiLCJpc3MiOiJOb2RlIEF1dGggQXBpIiwic3ViIjoiYWNscmV5ZXMifQ.LhxJfN58kYBu42ZNs3ItyiXxGD381OQJ41L4U10WgarTorVntZ6wPXlWqF7otUYIeqmjWd6ex38zbqxwEABmB_9-o7SVEayVh9sni0Z0s1srZa_1Sh7EuFXu6QzMrwsirb7vqjOcTvKs7TxKZUS6EaqKTG9f6GAFxvihNluN_5I"
        "401":
          description: Token Invalid
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: number
                    example: 400
                  msg:
                    type: string
                    example: "Token Invalid"
  /refresh-token:
    post:
      summary: Use a refresh token to generate a new JWT token and a new refresh token
      description: The refresh token is sent and returned via cookies.
      operationId: refreshToken
      tags:
        - User refresh token
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                refresh_token:
                  type: string
                  example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6ImFjbHJleWVzIiwiaWF0IjoxNjM1NzUwNTI1LCJleHAiOjE2MzYwMDk3MjUsImF1ZCI6InBhbmRvcmEifQ.AciNhNV8iKYzopDHEVm_A7S--Yebhvzh3pbt1EjsYdo"
              required:
                - refresh_token
      responses:
        "200":
          description: User details, a JWT access token and a new refresh token
          content:
            application/json:
              schema:
                type: object
                properties:
                  accessToken:
                    type: string
                    example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiI1ZWIxMmUxOTdlMDZhNzZjY2RlZmMxMjEiLCJpZCI6IjVlYjEyZTE5N2UwNmE3NmNjZGVmYzEyMSIsImlhdCI6MTU4ODc1ODE1N30.xR9H0STbFOpSkuGA9jHNZOJ6eS7umHHqKRhI807YT1Y"
                  refreshToken:
                    type: string
                    example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiI1ZWIxMmUxOTdlMDZhNzZjY2RlZmMxMjEiLCJpZCI6IjVlYjEyZTE5N2UwNmE3NmNjZGVmYzEyMSIsImlhdCI6MTU4ODc1ODE1N30.xR9H0STbFOpSkuGA9jHNZOJ6eS7umHHqKRhI807YT1Y"
        "401":
          description: Access token invalid
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Access Token invalid"
        "400":
          description: The system has detected that the token has been compromised, must log-out the user
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Token is still valid, cant be refreshed"
  /user:
    get:
      summary: Return the user data available from Api Cujae LDAP /user
      description: Return the user data from https://api.cujae.edu.cu/user using the access token provided by the system
      operationId: getUser
      tags:
          - User Data
      security:
        - bearerAuth: []
      responses:
        "200":
          description: The user data
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    type: object
                    example: user data from api cujae
        "401":
          description: Token invalid
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Could not verify your access level for that URL"
  
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
    basicAuth:
      type: http
      scheme: basic
  responses:
    UnauthorizedError:
      description: Access token is missing or invalid, or the user does not have access to perform the action
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
                example: "Unauthorized"
    NotFoundError:
      description: Not Found
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
                example: "Not Found"